{
  "address": "0xaB74eD32C03dAD50feeEE5e74E6e95571E13D528",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "s_priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__notEnoughETH",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "FundMe__notOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "fundingAddress",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xe1ecb2dd7d28d93a97073ed45d34c04d401a812620e7c537a6800bcfa5ddd4be",
  "receipt": {
    "to": null,
    "from": "0xF07CF4AbAc0a87db57382fbFB0D19f8baC866783",
    "contractAddress": "0xaB74eD32C03dAD50feeEE5e74E6e95571E13D528",
    "transactionIndex": 80,
    "gasUsed": "1050628",
    "logsBloom": "0x
    "blockHash": "0xecf7ba8f8badcd990e6c0afcba5db743970b57c0ee1892df334654b36f1f6a99",
    "transactionHash": "0xe1ecb2dd7d28d93a97073ed45d34c04d401a812620e7c537a6800bcfa5ddd4be",
    "logs": [],
    "blockNumber": 5230956,
    "cumulativeGasUsed": "9104174",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x694AA1769357215DE4FAC081bf1f309aDC325306"
  ],
  "numDeployments": 2,
  "solcInputHash": "5ae883df09a698b253d850ae57c0fc50",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"s_priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__notEnoughETH\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FundMe__notOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundingAddress\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8.8;\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__notOwner();\\nerror FundMe__notEnoughETH();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n    uint256 public constant MINIMUM_USD = 50 * 1e18; //constant variables have different naming convention\\n    address[] private s_Funders; //all vaiables which are storage variable, we have different naming convention of s_\\n    mapping(address => uint256) private s_addressToAmountFunded; //all vaiables which are storage variable, we have different naming convention of s_\\n    address private immutable i_owner; //different naming convention _i for immutable variables\\n    AggregatorV3Interface private s_priceFeed; //all vaiables which are storage variable, we have different naming convention of s_\\n\\n    modifier onlyOwner() {\\n        // require(msg.sender==i_owner);\\n        if (msg.sender != i_owner) {\\n            revert FundMe__notOwner();\\n        } // both do same thing, but ths is more gas efficient\\n        _;\\n    }\\n\\n    constructor(address s_priceFeedAddress) {\\n        i_owner = msg.sender; //msg.sender here the person who deploys the contract since it is in Constructor\\n        s_priceFeed = AggregatorV3Interface(s_priceFeedAddress);\\n    }\\n\\n    function fund() public payable {\\n        if (msg.value.getConversionRate(s_priceFeed) <= MINIMUM_USD) {\\n            revert FundMe__notEnoughETH();\\n        }\\n        // require(getConversionRate(msg.value) >= minimumUsd, \\\"Didn't send enough\\\");//1e18 = 1 * 10**28 gwei\\n        s_Funders.push(msg.sender);\\n        s_addressToAmountFunded[msg.sender] = msg.value;\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (uint256 fundIndex = 0; fundIndex < s_Funders.length; fundIndex++) {\\n            address funder = s_Funders[fundIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        //reset the array\\n        s_Funders = new address[](0);\\n\\n        //to withdraw funds we have 3 methods, transfer, send and call\\n        //transfer\\n        payable(msg.sender).transfer(address(this).balance);\\n\\n        //send\\n        bool paymentSuccess = payable(msg.sender).send(address(this).balance);\\n        require(paymentSuccess, \\\"FAIL\\\");\\n\\n        //call(recommended)\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\"); //returns 2 variable but we only need one\\n        require(callSuccess, \\\"fail\\\");\\n    }\\n\\n    function cheaperWithdraw() public onlyOwner {\\n        address[] memory funders = s_Funders;\\n        for (uint256 fundIndex = 0; fundIndex < funders.length; fundIndex++) {\\n            address funder = funders[fundIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_Funders = new address[](0);\\n        // payable(msg.sender).transfer(address(this).balance);\\n        (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(success);\\n    }\\n\\n    //What if someone sends ETH to the contract address without calling FUND fucntion?\\n\\n    //solidity has two special functions for this 1)recieve() 2)fallback()\\n\\n    // receive() external payable {\\n    //     fund();\\n    // }\\n\\n    // fallback() external payable {\\n    //     fund();\\n    // }\\n\\n    function getAddressToAmountFunded(\\n        address fundingAddress\\n    ) public view returns (uint256) {\\n        return s_addressToAmountFunded[fundingAddress];\\n    }\\n\\n    function getFunders(uint256 index) public view returns (address) {\\n        return s_Funders[index];\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n}\\n\",\"keccak256\":\"0xa9718fbac1be3950bd7eadca6bd1e985e20820f549ce74e3ffaf81c42fa98461\",\"license\":\"GPL-3.0\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        //ABI\\n        //ADDRESS 0x694AA1769357215DE4FAC081bf1f309aDC325306\\n        // AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n        //     0x694AA1769357215DE4FAC081bf1f309aDC325306\\n        // );\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\n        return uint256(price * 1e10);\\n    }\\n\\n    // function getVersion() internal view returns (uint256) {\\n    //     AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n    //         0x694AA1769357215DE4FAC081bf1f309aDC325306\\n    //     );\\n    //     return priceFeed.version();\\n    // }\\n\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountinUsd = (ethPrice * ethAmount) / 1e10;\\n\\n        return ethAmountinUsd;\\n    }\\n}\\n\",\"keccak256\":\"0xad61a72d22417ead1826d61a987b25c1c1303451f0b40110fd85290d89a399bd\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b506040516200132b3803806200132b833981810160405281019062000037919062000120565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c6111a5620001866000396000818161024501528181610555015281816106c401526108ba01526111a56000f3fe60806040526004361061007b5760003560e01c8063893d20e81161004e578063893d20e81461013c5780639e87a5cd14610167578063b60d428814610192578063be2693f01461019c5761007b565b80630343fb25146100805780633a7b6c74146100bd5780633ccfd60b146100fa5780636b69a59214610111575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610b33565b6101b3565b6040516100b49190610b79565b60405180910390f35b3480156100c957600080fd5b506100e460048036038101906100df9190610bc0565b6101fc565b6040516100f19190610bfc565b60405180910390f35b34801561010657600080fd5b5061010f610243565b005b34801561011d57600080fd5b50610126610544565b6040516101339190610b79565b60405180910390f35b34801561014857600080fd5b50610151610551565b60405161015e9190610bfc565b60405180910390f35b34801561017357600080fd5b5061017c610579565b6040516101899190610c76565b60405180910390f35b61019a6105a3565b005b3480156101a857600080fd5b506101b16106c2565b005b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600080828154811061021157610210610c91565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102c8576040517f8186952400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156103735760008082815481106102ed576102ec610c91565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061036b90610cef565b9150506102cb565b50600067ffffffffffffffff81111561038f5761038e610d38565b5b6040519080825280602002602001820160405280156103bd5781602001602082028036833780820191505090505b50600090805190602001906103d3929190610a29565b503373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505015801561041a573d6000803e3d6000fd5b5060003373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050905080610494576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048b90610dc4565b60405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff16476040516104ba90610e15565b60006040518083038185875af1925050503d80600081146104f7576040519150601f19603f3d011682016040523d82523d6000602084013e6104fc565b606091505b5050905080610540576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053790610e76565b60405180910390fd5b5050565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b18800006105e2600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461095090919063ffffffff16565b11610619576040517f751af43400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610747576040517f8186952400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156107ca57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610780575b5050505050905060005b81518110156108555760008282815181106107f2576107f1610c91565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061084d90610cef565b9150506107d4565b50600067ffffffffffffffff81111561087157610870610d38565b5b60405190808252806020026020018201604052801561089f5781602001602082028036833780820191505090505b50600090805190602001906108b5929190610a29565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516108fc90610e15565b60006040518083038185875af1925050503d8060008114610939576040519150601f19603f3d011682016040523d82523d6000602084013e61093e565b606091505b505090508061094c57600080fd5b5050565b60008061095c83610989565b905060006402540be40085836109729190610e96565b61097c9190610f1f565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156109d257600080fd5b505afa1580156109e6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a0a9190610fdd565b5050509150506402540be40081610a219190611058565b915050919050565b828054828255906000526020600020908101928215610aa2579160200282015b82811115610aa15782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610a49565b5b509050610aaf9190610ab3565b5090565b5b80821115610acc576000816000905550600101610ab4565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b0082610ad5565b9050919050565b610b1081610af5565b8114610b1b57600080fd5b50565b600081359050610b2d81610b07565b92915050565b600060208284031215610b4957610b48610ad0565b5b6000610b5784828501610b1e565b91505092915050565b6000819050919050565b610b7381610b60565b82525050565b6000602082019050610b8e6000830184610b6a565b92915050565b610b9d81610b60565b8114610ba857600080fd5b50565b600081359050610bba81610b94565b92915050565b600060208284031215610bd657610bd5610ad0565b5b6000610be484828501610bab565b91505092915050565b610bf681610af5565b82525050565b6000602082019050610c116000830184610bed565b92915050565b6000819050919050565b6000610c3c610c37610c3284610ad5565b610c17565b610ad5565b9050919050565b6000610c4e82610c21565b9050919050565b6000610c6082610c43565b9050919050565b610c7081610c55565b82525050565b6000602082019050610c8b6000830184610c67565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610cfa82610b60565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d2d57610d2c610cc0565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082825260208201905092915050565b7f4641494c00000000000000000000000000000000000000000000000000000000600082015250565b6000610dae600483610d67565b9150610db982610d78565b602082019050919050565b60006020820190508181036000830152610ddd81610da1565b9050919050565b600081905092915050565b50565b6000610dff600083610de4565b9150610e0a82610def565b600082019050919050565b6000610e2082610df2565b9150819050919050565b7f6661696c00000000000000000000000000000000000000000000000000000000600082015250565b6000610e60600483610d67565b9150610e6b82610e2a565b602082019050919050565b60006020820190508181036000830152610e8f81610e53565b9050919050565b6000610ea182610b60565b9150610eac83610b60565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ee557610ee4610cc0565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f2a82610b60565b9150610f3583610b60565b925082610f4557610f44610ef0565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f6f81610f50565b8114610f7a57600080fd5b50565b600081519050610f8c81610f66565b92915050565b6000819050919050565b610fa581610f92565b8114610fb057600080fd5b50565b600081519050610fc281610f9c565b92915050565b600081519050610fd781610b94565b92915050565b600080600080600060a08688031215610ff957610ff8610ad0565b5b600061100788828901610f7d565b955050602061101888828901610fb3565b945050604061102988828901610fc8565b935050606061103a88828901610fc8565b925050608061104b88828901610f7d565b9150509295509295909350565b600061106382610f92565b915061106e83610f92565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821160008413600084131616156110ad576110ac610cc0565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156110ea576110e9610cc0565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561112757611126610cc0565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561116457611163610cc0565b5b82820290509291505056fea264697066735822122036300e4c120752d04ecd08692c3a0cd56be4c220238750b66673059427f0841264736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061007b5760003560e01c8063893d20e81161004e578063893d20e81461013c5780639e87a5cd14610167578063b60d428814610192578063be2693f01461019c5761007b565b80630343fb25146100805780633a7b6c74146100bd5780633ccfd60b146100fa5780636b69a59214610111575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610b33565b6101b3565b6040516100b49190610b79565b60405180910390f35b3480156100c957600080fd5b506100e460048036038101906100df9190610bc0565b6101fc565b6040516100f19190610bfc565b60405180910390f35b34801561010657600080fd5b5061010f610243565b005b34801561011d57600080fd5b50610126610544565b6040516101339190610b79565b60405180910390f35b34801561014857600080fd5b50610151610551565b60405161015e9190610bfc565b60405180910390f35b34801561017357600080fd5b5061017c610579565b6040516101899190610c76565b60405180910390f35b61019a6105a3565b005b3480156101a857600080fd5b506101b16106c2565b005b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600080828154811061021157610210610c91565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102c8576040517f8186952400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156103735760008082815481106102ed576102ec610c91565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061036b90610cef565b9150506102cb565b50600067ffffffffffffffff81111561038f5761038e610d38565b5b6040519080825280602002602001820160405280156103bd5781602001602082028036833780820191505090505b50600090805190602001906103d3929190610a29565b503373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505015801561041a573d6000803e3d6000fd5b5060003373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050905080610494576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048b90610dc4565b60405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff16476040516104ba90610e15565b60006040518083038185875af1925050503d80600081146104f7576040519150601f19603f3d011682016040523d82523d6000602084013e6104fc565b606091505b5050905080610540576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053790610e76565b60405180910390fd5b5050565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b18800006105e2600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461095090919063ffffffff16565b11610619576040517f751af43400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610747576040517f8186952400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156107ca57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610780575b5050505050905060005b81518110156108555760008282815181106107f2576107f1610c91565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061084d90610cef565b9150506107d4565b50600067ffffffffffffffff81111561087157610870610d38565b5b60405190808252806020026020018201604052801561089f5781602001602082028036833780820191505090505b50600090805190602001906108b5929190610a29565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516108fc90610e15565b60006040518083038185875af1925050503d8060008114610939576040519150601f19603f3d011682016040523d82523d6000602084013e61093e565b606091505b505090508061094c57600080fd5b5050565b60008061095c83610989565b905060006402540be40085836109729190610e96565b61097c9190610f1f565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156109d257600080fd5b505afa1580156109e6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a0a9190610fdd565b5050509150506402540be40081610a219190611058565b915050919050565b828054828255906000526020600020908101928215610aa2579160200282015b82811115610aa15782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610a49565b5b509050610aaf9190610ab3565b5090565b5b80821115610acc576000816000905550600101610ab4565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b0082610ad5565b9050919050565b610b1081610af5565b8114610b1b57600080fd5b50565b600081359050610b2d81610b07565b92915050565b600060208284031215610b4957610b48610ad0565b5b6000610b5784828501610b1e565b91505092915050565b6000819050919050565b610b7381610b60565b82525050565b6000602082019050610b8e6000830184610b6a565b92915050565b610b9d81610b60565b8114610ba857600080fd5b50565b600081359050610bba81610b94565b92915050565b600060208284031215610bd657610bd5610ad0565b5b6000610be484828501610bab565b91505092915050565b610bf681610af5565b82525050565b6000602082019050610c116000830184610bed565b92915050565b6000819050919050565b6000610c3c610c37610c3284610ad5565b610c17565b610ad5565b9050919050565b6000610c4e82610c21565b9050919050565b6000610c6082610c43565b9050919050565b610c7081610c55565b82525050565b6000602082019050610c8b6000830184610c67565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610cfa82610b60565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d2d57610d2c610cc0565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082825260208201905092915050565b7f4641494c00000000000000000000000000000000000000000000000000000000600082015250565b6000610dae600483610d67565b9150610db982610d78565b602082019050919050565b60006020820190508181036000830152610ddd81610da1565b9050919050565b600081905092915050565b50565b6000610dff600083610de4565b9150610e0a82610def565b600082019050919050565b6000610e2082610df2565b9150819050919050565b7f6661696c00000000000000000000000000000000000000000000000000000000600082015250565b6000610e60600483610d67565b9150610e6b82610e2a565b602082019050919050565b60006020820190508181036000830152610e8f81610e53565b9050919050565b6000610ea182610b60565b9150610eac83610b60565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ee557610ee4610cc0565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f2a82610b60565b9150610f3583610b60565b925082610f4557610f44610ef0565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f6f81610f50565b8114610f7a57600080fd5b50565b600081519050610f8c81610f66565b92915050565b6000819050919050565b610fa581610f92565b8114610fb057600080fd5b50565b600081519050610fc281610f9c565b92915050565b600081519050610fd781610b94565b92915050565b600080600080600060a08688031215610ff957610ff8610ad0565b5b600061100788828901610f7d565b955050602061101888828901610fb3565b945050604061102988828901610fc8565b935050606061103a88828901610fc8565b925050608061104b88828901610f7d565b9150509295509295909350565b600061106382610f92565b915061106e83610f92565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821160008413600084131616156110ad576110ac610cc0565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156110ea576110e9610cc0565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561112757611126610cc0565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561116457611163610cc0565b5b82820290509291505056fea264697066735822122036300e4c120752d04ecd08692c3a0cd56be4c220238750b66673059427f0841264736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 63,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_Funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 67,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 72,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}